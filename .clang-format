---
Language: Cpp

# BasedOnStyle: Chromium
AccessModifierOffset: -4
AlignAfterOpenBracket: Align
AlignArrayOfStructures: Right
AlignConsecutiveAssignments: Consecutive
AlignConsecutiveMacros: Consecutive
AlignConsecutiveBitFields: Consecutive
AlignConsecutiveDeclarations: None

AlignEscapedNewlines: Left
AlignOperands: AlignAfterOperator
AlignTrailingComments: Always
AllowAllArgumentsOnNextLine: true

#AllowAllConstructorInitializersOnNextLine: false --- Deprecated

AllowAllParametersOfDeclarationOnNextLine: false

AllowShortBlocksOnASingleLine: Empty
AllowShortCaseLabelsOnASingleLine: false
AllowShortEnumsOnASingleLine: false
AllowShortFunctionsOnASingleLine: Inline
AllowShortIfStatementsOnASingleLine: Never
AllowShortLambdasOnASingleLine: All
AllowShortLoopsOnASingleLine: false

# AlwaysBreakAfterDefinitionReturnType: None --- Deprecated

AlwaysBreakAfterReturnType: None
AlwaysBreakBeforeMultilineStrings: false
AlwaysBreakTemplateDeclarations: Yes

#BinPackArguments: true
BinPackParameters: false
BitFieldColonSpacing: Both

BraceWrapping:
  AfterCaseLabel: true
  AfterClass: true
  AfterControlStatement: Always
  AfterEnum: true
  AfterFunction: true
  AfterNamespace: true
  AfterObjCDeclaration: false
  AfterStruct: true
  AfterUnion: true
  AfterExternBlock: true
  BeforeCatch: true
  BeforeElse: true
  BeforeLambdaBody: false
  BeforeWhile: false
  IndentBraces: false
  SplitEmptyFunction: false
  SplitEmptyRecord: false
  SplitEmptyNamespace: false

BreakAfterAttributes: Never
BreakArrays: false

BreakBeforeBinaryOperators: NonAssignment
BreakBeforeBraces: Custom # BreaceWrapping
BreakBeforeConceptDeclarations: Always
BreakBeforeInlineASMColon: OnlyMultiline
BreakBeforeTernaryOperators: true
BreakConstructorInitializers: AfterColon
BreakInheritanceList: AfterComma

BreakStringLiterals: true
ColumnLimit: 80
CommentPragmas: '^ IWYU pragma:'
CompactNamespaces: false

#ConstructorInitializerAllOnOneLineOrOnePerLine: false -- Deprecated
ConstructorInitializerIndentWidth: 8
ContinuationIndentWidth: 4
Cpp11BracedListStyle: true

#DeriveLineEnding: false -- Deprecated

DerivePointerAlignment: false
DisableFormat: false

EmptyLineAfterAccessModifier : Never
EmptyLineBeforeAccessModifier : LogicalBlock

ExperimentalAutoDetectBinPacking: false
FixNamespaceComments: true

ForEachMacros: ['RANGES_FOR', 'FOREACH', 'foreach', 'BOOST_FOREACH', 'Q_FOREACH']
IfMacros: ['IF', 'KJ_IF_MAYBE']

IncludeBlocks: Regroup
IncludeCategories:
  # Standard library headers come before anything else
  - Regex: '^<[a-z_]+>'
    Priority: -1
  - Regex: '^<.+\.h(pp)?>'
    Priority: 1
  - Regex: '^<.*'
    Priority: 2
  - Regex: '.*'
    Priority: 3
IncludeIsMainRegex: ''
IncludeIsMainSourceRegex: ''

IndentAccessModifiers: false
IndentCaseBlocks: false
IndentCaseLabels: true
IndentExternBlock: NoIndent
IndentGotoLabels: true

IndentPPDirectives: AfterHash
IndentRequiresClause : true

IndentWidth: 4
IndentWrappedFunctionNames: false

InsertNewlineAtEOF: true
InsertTrailingCommas: None

IntegerLiteralSeparator:
  Decimal: 3

KeepEmptyLinesAtTheStartOfBlocks: false

LambdaBodyIndentation: Signature

MacroBlockBegin: ''
MacroBlockEnd: ''
MaxEmptyLinesToKeep: 1
NamespaceIndentation: None

PPIndentWidth: -1 # Uses IndentWidth
PackConstructorInitializers: CurrentLine

PenaltyBreakAssignment: 2
PenaltyBreakBeforeFirstCallParameter: 1
PenaltyBreakComment: 300
PenaltyBreakFirstLessLess: 120
PenaltyBreakString: 1000
PenaltyBreakTemplateDeclaration: 10
PenaltyExcessCharacter: 1000000
PenaltyReturnTypeOnItsOwnLine: 200

PointerAlignment: Left

QualifierAlignment: Right

RawStringFormats:
  - Language: Cpp
    Delimiters:
      - cc
      - CC
      - cpp
      - Cpp
      - CPP
      - 'c++'
      - 'C++'
    CanonicalDelimiter: ''
    BasedOnStyle: google
  - Language: TextProto
    Delimiters:
      - pb
      - PB
      - proto
      - PROTO
    EnclosingFunctions:
      - EqualsProto
      - EquivToProto
      - PARSE_PARTIAL_TEXT_PROTO
      - PARSE_TEST_PROTO
      - PARSE_TEXT_PROTO
      - ParseTextOrDie
      - ParseTextProtoOrDie
      - ParseTestProto
      - ParsePartialTestProto
    CanonicalDelimiter: ''
    BasedOnStyle: google

ReferenceAlignment: Left
ReflowComments: true
RequiresClausePosition: OwnLine
RequiresExpressionIndentation: OuterScope

SeparateDefinitionBlocks: Always
ShortNamespaceLines: 0

SortIncludes: CaseInsensitive
SortUsingDeclarations: Lexicographic

SpaceAfterCStyleCast: false
SpaceAfterLogicalNot: false
SpaceAfterTemplateKeyword: true
SpaceAroundPointerQualifiers: Before

SpaceBeforeAssignmentOperators: true
SpaceBeforeCaseColon: false
SpaceBeforeCpp11BracedList: false
SpaceBeforeCtorInitializerColon: true
SpaceBeforeInheritanceColon: true
SpaceBeforeParens: ControlStatementsExceptForEachMacros
SpaceBeforeRangeBasedForLoopColon: true
SpaceInEmptyBlock: false
SpaceInEmptyParentheses: false
SpacesBeforeTrailingComments: 2
SpacesInAngles: false
SpacesInCStyleCastParentheses: false
SpacesInConditionalStatement: false
SpacesInContainerLiterals: false
SpacesInLineCommentPrefix:
  Minimum: 1
  Maximum: -1
SpacesInParentheses: false
SpacesInSquareBrackets: false
SpaceBeforeSquareBrackets: false
Standard: Auto
StatementMacros:
  - Q_UNUSED
  - QT_REQUIRE_VERSION
TabWidth: 4

#UseCRLF: false --- Deprecared

UseTab: Never
WhitespaceSensitiveMacros:
  - STRINGIZE
  - PP_STRINGIZE
  - BOOST_PP_STRINGIZE
